// Ideally, add package statement:

import com.example.practicetwo.data.Note
import com.example.practicetwo.data.NoteDao
import kotlinx.coroutines.flow.Flow

import com.google.firebase.firestore.ktx.firestore
import com.google.firebase.ktx.Firebase
import kotlinx.coroutines.tasks.await
/**
 * A repository class abstracts access to multiple data sources.
 * Here we only have Room, but you could combine local + network, etc.
 */

class NoteRepository(private val noteDao: NoteDao) {

    fun getAllNotes(): Flow<List<Note>> = noteDao.getAllNotes()

    suspend fun insertNote(note: Note) {
        noteDao.insertNote(note)
    }

    // Push a note to Firestore
    suspend fun uploadNoteToFirebase(note: Note) {
        val db = Firebase.firestore
        // Weâ€™ll store notes in a "notes" collection
        // The note ID will be auto-generated by Firestore
        db.collection("notes").add(note).await()
    }
}